
import fs from "fs";
import path from "path";
import { parse } from "csv-parse/sync";

const CSV_URL = "https://docs.google.com/spreadsheets/d/e/2PACX-1vQ7t7O-yUIZNSrglVHnMcRgd2IMAYBQyrdGd6d-JUCoSmxWb5uJNI2G3oKqL8j22BtIBD1yhOXAtsZs/pub?output=csv";
const DIST = "dist";

async function fetchCSV(url){ const res = await fetch(url); if(!res.ok) throw new Error("CSV fetch failed"); return await res.text(); }
function ci(row){ const m=Object.fromEntries(Object.entries(row).map(([k,v])=>[String(k).toLowerCase().trim(), v])); return (...keys)=>{ for(const k of keys){ const v=m[String(k).toLowerCase()]; if(v!=null && String(v).trim()!=="") return v; } }; }
function parseMoney(x){ if(x==null) return 0; const s=String(x).replace(/\$/g,"").replace(/,/g,"").trim(); const n=parseFloat(s); return isFinite(n)?n:0; }
function nOnly(x){ const m=String(x||"").match(/(\d+(?:\.\d+)?)/); return m?parseFloat(m[1]):undefined; }
function normSize(size1,size2,name){ const s1=String(size1||""); const s2=String(size2||""); function fmt(a,b){ if(a&&b&&a!==b) return a+"mm to "+b+"mm"; if(a) return a+"mm"; return ""; } let m=s1.match(/(\d+(?:\.\d+)?)\s*(?:x|to|–|-|—|\s)\s*(\d+(?:\.\d+)?)/i); if(m) return fmt(m[1],m[2]); const a=nOnly(s1), b=nOnly(s2); if(a&&b) return fmt(String(a),String(b)); if(a) return fmt(String(a)); let t=String(name||"").toLowerCase().replace(/mm/g,""); let m2=t.match(/(\d{1,2})\s*(?:to|–|-|—|x|\s)\s*(\d{1,2})/); if(m2) return fmt(m2[1],m2[2]); let m3=t.match(/(\d{1,2})(?:\s*-\s*|\s+to\s+|\s*x\s*)(\d{1,2})/); if(m3) return fmt(m3[1],m3[2]); let m4=t.match(/(\d{1,2})(?!\s*to|\s*x|\s*-|\s*—|\s*–)/); if(m4) return fmt(m4[1]); return ""; }
function combineShape(s1,s2){ const a=String(s1||"").trim(); let b=String(s2||"").trim(); b=b.toLowerCase()==="roundell"||b.toLowerCase()==="roundel"?"Rondelle":b; const parts=[a,b].filter(Boolean); return parts.join(" "); }
function shapeBucket(shape){ const s=String(shape||"").toLowerCase(); if(/faceted/.test(s)) return "Faceted"; if(/rondell?e/.test(s)) return "Rondelle"; if(/round(?!ell)/.test(s)) return "Round"; if(/oval|emerald/.test(s)) return "Oval"; if(/drop|brio/.test(s)) return "Drops / Briolettes"; if(/square|rect/.test(s)) return "Square & Rectangle"; if(/coin|disc/.test(s)) return "Coin / Disc"; if(/heart|fancy|carv/.test(s)) return "Heart / Fancy"; if(/nugget|chip|tumble/.test(s)) return "Nugget / Chip / Tumble"; return "Other"; }
function slug(s){ return String(s||"").toLowerCase().trim().replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,''); }
function normalize(rows){ return rows.map((row, idx)=>{ const get=ci(row); const name=get("Full Name","Name","Item","String")||"Bead"; const stone=get("Stone")||""; const shape1=get("Shape 1","Shape1","Shape")||""; const shape2=get("Shape 2","Shape2")||""; const shape=combineShape(shape1,shape2); const price=parseMoney(get("Price","Retail","Sell","$","Value")); const size1=get("Size1","Size 1")||""; const size2=get("Size2","Size 2")||""; const size=normSize(size1,size2,name); const code=get("Code","SKU")||""; const image=get("Image"); const id=(code?String(code):(stone+"-"+name+"-"+idx)).toLowerCase().replace(/[^a-z0-9]+/g,"-"); return {id,name,stone,shape,size,price,code,image}; }).filter(x=>x.name && x.stone); }
function ensureDir(p){ fs.mkdirSync(p,{recursive:true}); }
function head(title, desc, stones){ return ['<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"/><meta name="viewport" content="width=device-width, initial-scale=1"/><title>',title,'</title><meta name="description" content="',desc,'"/><link rel="preconnect" href="https://fonts.googleapis.com"><link rel="preconnect" href="https://fonts.gstatic.com" crossorigin><link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet"><script src="https://cdn.tailwindcss.com"></script><link rel="stylesheet" href="/assets/css/extra.css"></head><body class="bg-white text-slate-800" data-stones="',stones.join('|'),'">'].join(''); }
function header(){ return ['<header class="sticky top-0 z-40 bg-white/80 backdrop-blur border-b border-slate-200"><div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 h-16 flex items-center justify-between"><a href="/" class="text-xl font-bold tracking-tight">Canton <span class="text-sky-600">Bead</span> Shop</a><nav class="hidden md:flex flex-1 items-center mx-6"><button id="allStonesBtn" class="ml-auto px-3 py-1.5 rounded-lg border border-slate-200 hover:bg-slate-50 whitespace-nowrap text-sm">All Stones ▾</button></nav><div class="flex items-center gap-2"><button id="printSummaryHeader" class="hidden sm:inline-flex rounded-xl border border-slate-300 px-3 py-1.5 text-sm hover:bg-slate-50">Print Summary</button><button id="openList" class="relative inline-flex items-center rounded-xl border border-slate-300 px-3 py-1.5 text-sm font-medium hover:bg-slate-50">My List <span id="listCount" class="ml-2 inline-flex items-center justify-center w-5 h-5 rounded-full bg-sky-600 text-white text-[11px]">0</span></button></div></div></header><div id="megaOverlay" class="mega-overlay"></div><div id="megaPanel" class="mega-panel" tabindex="-1"><div class="mega-inner" id="megaList"></div></div>'].join(''); }
function footer(){ return ['<footer class="border-t border-slate-200"><div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8 text-sm text-slate-500">© <span id="year"></span> Canton Bead Shop</div></footer><script src="/assets/js/app.js"></script><script>document.getElementById("year").textContent=new Date().getFullYear();</script></body></html>'].join(''); }
function filters(){ return ['<div class="filters-sticky flex flex-wrap items-center gap-2 mb-4"><select id="fShape" class="rounded-lg border border-slate-300 px-3 py-2 text-sm"><option value="">Shape: All</option></select><select id="fSize" class="rounded-lg border border-slate-300 px-3 py-2 text-sm"><option value="">Size: All</option></select><select id="fPrice" class="rounded-lg border border-slate-300 px-3 py-2 text-sm"><option value="">Price: All</option><option value="0-10">$0–$10</option><option value="10-20">$10–$20</option><option value="20-50">$20–$50</option><option value="50-999">$50+</option></select><select id="fSort" class="rounded-lg border border-slate-300 px-3 py-2 text-sm"><option value="">Sort: Popular</option><option value="price-asc">Price: Low → High</option><option value="price-desc">Price: High → Low</option><option value="name-asc">Name: A → Z</option></select><button id="clearFilters" class="btn-clear rounded-lg px-3 py-2 text-sm">Clear</button><div class="relative ml-auto"><input id="searchInput" type="search" placeholder="Search stone, shape, size, name…" class="w-64 max-w-[60vw] rounded-xl border border-slate-300 px-3 py-2 text-sm"/></div></div>'].join(''); }
function drawer(){ return ['<aside id="drawer" class="fixed top-0 right-0 h-full w-[90vw] max-w-md bg-white border-l border-slate-200 shadow-xl translate-x-full transition-transform no-print"><div class="h-16 px-4 flex items-center justify-between border-b border-slate-200"><h3 class="font-semibold">My List</h3><div class="flex items-center gap-2"><button id="printSummaryDrawer" class="text-sm border border-slate-300 rounded-lg px-3 py-1.5 hover:bg-slate-50">Print</button><button id="clearList" class="text-sm text-slate-600 hover:text-slate-800">Clear</button><button id="closeList" class="rounded-lg border border-slate-300 px-3 py-1.5 text-sm hover:bg-slate-50">Close</button></div></div><div id="listItems" class="p-4 space-y-3 overflow-y-auto h-[calc(100%-9.5rem)]"></div><div class="p-4 border-t border-slate-200 flex items-center justify-between"><div class="text-sm text-slate-600"><span id="listTotalCount">0</span> items</div><div class="text-sm font-semibold">Total: <span id="grandTotal">$0.00</span></div><button id="printSummary" class="inline-flex items-center rounded-2xl bg-sky-600 px-4 py-2 text-white text-sm font-semibold">Print Summary</button></div></aside>'].join(''); }
function requestForm(){ return ['<section id="request" class="border-t border-slate-200 bg-slate-50/60"><div class="mx-auto max-w-3xl px-4 sm:px-6 lg:px-8 py-10"><div class="flex items-center justify-between"><h2 class="text-2xl sm:text-3xl font-bold tracking-tight mb-2">Send Request</h2><button id="printSummaryHeader" class="rounded-xl border border-slate-300 px-3 py-2 text-sm hover:bg-slate-100">Print Summary</button></div><p class="text-slate-600 mb-4">Add items to your list, then submit your details. We will reply with price & shipping.</p><form name="request" method="POST" data-netlify="true" class="grid sm:grid-cols-2 gap-4 bg-white p-5 rounded-2xl border border-slate-200"><input type="hidden" name="form-name" value="request"/><input type="hidden" id="listPayload" name="listPayload" /><label class="text-sm">Name <input required name="name" class="mt-1 w-full rounded-xl border border-slate-300 px-3 py-2"/></label><label class="text-sm">Company <input name="company" class="mt-1 w-full rounded-xl border border-slate-300 px-3 py-2"/></label><label class="text-sm">Phone <input name="phone" class="mt-1 w-full rounded-xl border border-slate-300 px-3 py-2"/></label><label class="text-sm">Email <input required type="email" name="email" class="mt-1 w-full rounded-xl border border-slate-300 px-3 py-2"/></label><label class="sm:col-span-2 text-sm">Address <input name="address" class="mt-1 w-full rounded-xl border border-slate-300 px-3 py-2"/></label><label class="sm:col-span-2 text-sm">Comments <textarea name="comments" rows="4" class="mt-1 w-full rounded-xl border border-slate-300 px-3 py-2"></textarea></label><div class="sm:col-span-2 flex items-center justify-end"><button id="submitRequest" class="inline-flex items-center rounded-2xl bg-sky-600 px-5 py-3 text-white font-semibold">Submit</button></div></form></div></section>'].join(''); }
function printArea(){ return ['<section id="printArea" class="hidden max-w-4xl mx-auto p-6"><h1 class="text-2xl font-bold mb-2">Canton Bead Shop – Request Summary</h1><table class="w-full text-sm border border-slate-300 border-collapse"><thead class="bg-slate-100"><tr><th class="border border-slate-300 p-2 text-left">Item</th><th class="border border-slate-300 p-2 text-left">Stone</th><th class="border border-slate-300 p-2 text-left">Size</th><th class="border border-slate-300 p-2 text-left">Shape</th><th class="border border-slate-300 p-2 text-right">Unit</th><th class="border border-slate-300 p-2 text-right">Qty</th><th class="border border-slate-300 p-2 text-right">Line</th></tr></thead><tbody id="printRows"></tbody><tfoot><tr><td colspan="6" class="border border-slate-300 p-2 text-right font-semibold">Total</td><td class="border border-slate-300 p-2 text-right font-bold" id="printGrand">$0.00</td></tr></tfoot></table></section>'].join(''); }
function page(title, desc, stones, items, h1){ const crumbs='<nav class="text-sm text-slate-500 mb-2"><a class="hover:underline" href="/">Home</a> <span class="mx-1">/</span> <span>'+h1+'</span></nav>'; return [ head(title, desc, stones), header(), '<main><section id="catalog"><div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">','<div class="flex items-center justify-between gap-4 mb-2"><h1 class="text-2xl sm:text-3xl font-bold tracking-tight">', h1 ,'</h1></div>', crumbs, filters(), '<div id="catalogGrid"></div><div id="catalogEmpty" class="hidden text-slate-500 text-sm mt-6">No items match your filters.</div></div></section>', requestForm(), printArea(), '</main>', drawer(), footer(), '<script>window.DATA=', JSON.stringify(items), ';</script><script src="/assets/js/page.js"></script>' ].join(''); }
function homeTile(stone, count){ return ['<a class="stone-pill" href="/stone/',slug(stone),'/"><img src="/assets/img/stones/_default.svg" alt="" /><div class="flex-1"><div class="text-sm font-semibold">',stone,'</div><div class="text-xs text-slate-500">',String(count),' items</div></div></a>'].join(''); }
function homePage(stones, counts, items){ const buckets=["Faceted","Rondelle","Round","Oval","Drops / Briolettes","Square & Rectangle","Coin / Disc","Heart / Fancy","Nugget / Chip / Tumble"]; const bucketCounts=Object.fromEntries(buckets.map(b=>[b,0])); items.forEach(i=>{ const b=shapeBucket(i.shape); if(bucketCounts[b]!=null) bucketCounts[b]++; }); const shapeTiles=buckets.map(b=>'<a class="stone-pill" href="/shape/'+slug(b)+'/"><img src="/assets/img/shapes/'+slug(b)+'.svg" alt=""/><div class="text-sm font-semibold">'+b+'</div><div class="ml-auto text-xs text-slate-500">'+(bucketCounts[b]||0)+' items</div></a>').join(''); const singles=[5,10,12,15,20,25,30,35,40]; const singleCounts=Object.fromEntries(singles.map(n=>[n,0])); items.forEach(it=>{ const p=Math.round((Number(it.price)||0)*100)/100; if(singleCounts[p]!=null) singleCounts[p]++; }); const priceSingles=singles.map(n=>'<a class="stone-pill" href="/price/exact/'+n+'/"><img src="/assets/img/price/exact.svg" alt=""/><div class="text-sm font-semibold">$'+n+'</div><div class="ml-auto text-xs text-slate-500">'+(singleCounts[n]||0)+' items</div></a>').join(''); const priceCounts={'0-10':0,'10-20':0,'20-50':0,'50-999':0}; items.forEach(it=>{ const p=Number(it.price)||0; if(p<10) priceCounts['0-10']++; else if(p<20) priceCounts['10-20']++; else if(p<50) priceCounts['20-50']++; else priceCounts['50-999']++; }); const priceRanges=['0-10','10-20','20-50','50-999'].map(b=>{ const label=b==='0-10'?'$0–$10':b==='10-20'?'$10–$20':b==='20-50'?'$20–$50':'$50+'; return '<a class="stone-pill" href="/price/'+b+'/"><img src="/assets/img/price/range.svg" alt=""/><div class="text-sm font-semibold">'+label+'</div><div class="ml-auto text-xs text-slate-500">'+(priceCounts[b]||0)+' items</div></a>'; }).join(''); const tiles=stones.map(s=>homeTile(s, counts[s]||0)).join(''); const icons='<div class="flex gap-3 mb-6"><a href="#price" class="stone-pill"><img src="/assets/img/price/range.svg" alt=""/><div><div class="text-sm font-semibold">Browse by Price</div><div class="text-xs text-slate-500">Ranges & Singles</div></div></a><a href="#stone" class="stone-pill"><img src="/assets/img/stones/_default.svg" alt=""/><div><div class="text-sm font-semibold">Browse by Stone</div><div class="text-xs text-slate-500">All stones</div></div></a><a href="#shape" class="stone-pill"><img src="/assets/img/shapes/faceted.svg" alt=""/><div><div class="text-sm font-semibold">Browse by Shape</div><div class="text-xs text-slate-500">Buckets</div></div></a></div>'; return [ head("Canton Bead Shop – Browse","Shop beads by price, stone, and shape. Build a list and request a quote.", stones), header(), '<main><section class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 py-8">', icons, '<h1 id="price" class="text-2xl sm:text-3xl font-bold tracking-tight mb-4">Browse by Price</h1><div class="grid-3">', priceSingles ,'</div>','<div class="grid-3 mt-3">', priceRanges ,'</div>','<h2 id="stone" class="text-2xl font-bold tracking-tight mt-8 mb-4">Browse by Stone</h2><div class="grid-3">', tiles ,'</div>','<h2 id="shape" class="text-2xl font-bold tracking-tight mt-8 mb-4">Browse by Shape</h2><div class="grid-3">', shapeTiles ,'</div></section></main>', footer() ].join(''); }
const csvText = await fetchCSV(CSV_URL); const rows = parse(csvText, { columns: true, skip_empty_lines: true }); const items0 = normalize(rows);
// Option E placeholders
function shapeSlug(shape){ const s=String(shape||"").toLowerCase(); if(/faceted/.test(s)) return "faceted"; if(/rondell?e/.test(s)) return "rondelle"; if(/round(?!ell)/.test(s)) return "round"; if(/oval|emerald/.test(s)) return "oval"; if(/drop|brio/.test(s)) return "drops-briolettes"; if(/square|rect/.test(s)) return "square-rectangle"; if(/coin|disc/.test(s)) return "coin-disc"; if(/heart|fancy|carv/.test(s)) return "heart-fancy"; if(/nugget|chip|tumble/.test(s)) return "nugget-chip-tumble"; return "other"; }
const items = items0.map(i=>{ if(!i.image || String(i.image).trim()===""){ i.image = "/assets/img/shapes/"+shapeSlug(i.shape)+".svg"; } return i; });
const stones = Array.from(new Set(items.map(i=>i.stone))).sort((a,b)=> a.localeCompare(b));
fs.rmSync(DIST,{recursive:true,force:true}); fs.cpSync("assets", path.join(DIST,"assets"), { recursive:true }); const counts=Object.fromEntries(stones.map(s=>[s,0])); items.forEach(it=>{ counts[it.stone]=(counts[it.stone]||0)+1; });
fs.writeFileSync(path.join(DIST,"index.html"), homePage(stones, counts, items), "utf-8");
const byStone={}; for(const it of items){ (byStone[it.stone]=byStone[it.stone]||[]).push(it); } for(const st of stones){ fs.mkdirSync(path.join(DIST,"stone", st.toLowerCase().replace(/[^a-z0-9]+/g,'-')),{recursive:true}); const html = page(st+" Beads – Canton Bead Shop", "Shop "+st+" beads.", stones, byStone[st], st); fs.writeFileSync(path.join(DIST,"stone", st.toLowerCase().replace(/[^a-z0-9]+/g,'-'),"index.html"), html, "utf-8"); }
const byShape={}; for(const it of items){ (byShape[it.shape]=byShape[it.shape]||[]).push(it); } for(const sh of Object.keys(byShape)){ fs.mkdirSync(path.join(DIST,"shape", sh.toLowerCase().replace(/[^a-z0-9]+/g,'-')),{recursive:true}); const html = page(sh+" Beads – Canton Bead Shop", "Shop "+sh+" beads.", stones, byShape[sh], sh); fs.writeFileSync(path.join(DIST,"shape", sh.toLowerCase().replace(/[^a-z0-9]+/g,'-'),"index.html"), html, "utf-8"); }
const buckets=['0-10','10-20','20-50','50-999']; function inBucket(p,b){ const a=b.split('-'); var lo=Number(a[0]||0), hi=Number(a[1]||999999); return p>=lo && p<hi; } for(const b of buckets){ const list=items.filter(i=> inBucket(Number(i.price)||0,b)); const label=b==='0-10'?'$0–$10':b==='10-20'?'$10–$20':b==='20-50'?'$20–$50':'$50+'; const html = page('Price '+label+' – Canton Bead Shop','Browse '+label+' beads.', stones, list, 'Price '+label); fs.mkdirSync(path.join(DIST,"price", b),{recursive:true}); fs.writeFileSync(path.join(DIST,"price", b,"index.html"), html, "utf-8"); }
const singles=[5,10,12,15,20,25,30,35,40]; for(const n of singles){ const list=items.filter(i=> Math.round((Number(i.price)||0)*100)/100 === n ); const html=page('Price $'+n+' – Canton Bead Shop','Browse $'+n+' beads.', stones, list, '$'+n); fs.mkdirSync(path.join(DIST,"price","exact",String(n)),{recursive:true}); fs.writeFileSync(path.join(DIST,"price","exact",String(n),"index.html"), html, "utf-8"); }
console.log("Build complete");